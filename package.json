{
  "version": "5.2.0",
  "name": "react-atomic-molecule",
  "repository": {
    "type": "git",
    "url": "https://github.com/react-atomic/react-atomic-molecule"
  },
  "description": "Atomic design in React (molecules)",
  "keywords": [
    "react-atomic",
    "react-atomic-ui"
  ],
  "author": "Hill <hill@kimo.com>",
  "license": "MIT",
  "dependencies": {
    "array.merge": "^0.2.0",
    "call-func": "^0.3.6",
    "class-lib": "^0.1.3",
    "create-el": "^0.2.0",
    "css-query-selector": "^0.4.0",
    "get-object-value": "^0.6.5",
    "hyphenate-style-name": "^1.0.4",
    "need-css": "^0.1.0",
    "react-atomic-atom": "^3.0.3",
    "reshow-build": "^0.17.16",
    "reshow-constant": "^0.17.4",
    "reshow-runtime": "^0.17.15",
    "ucfirst-js": "^0.1.0",
    "win-doc": "^0.3.2"
  },
  "devDependencies": {
    "lerna": "^5.6.2",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "reshow-unit": "^0.17.30"
  },
  "exports": {
    "require": "./build/cjs/src/index.js",
    "import": "./build/es/src/index.mjs"
  },
  "main": "./build/cjs/src/index.js",
  "module": "./build/es/src/index.mjs",
  "scripts": {
    "up-all": "lerna exec 'yarn'",
    "format": "prettier-eslint --write 'src/**/*.js' 'ui/**/*.js*'",
    "clean": "find ./build ./types -name '*.*' | xargs rm -rf",
    "build:cjs": "BABEL_ENV=cjs babel src -d build/cjs/src --ignore /**/__tests__",
    "build:es": "BABEL_ENV=es babel src -d build/es/src --out-file-extension .mjs",
    "build:type": "npx -p typescript tsc src/*.js src/**/*.js src/ui/**/*.jsx --jsx react-jsx --declaration --allowJs --emitDeclarationOnly --skipLibCheck --declarationDir types",
    "build": "npm run clean && npm run build:cjs && npm run build:es && npm run build:type",
    "mochaFor": "mocha -r global-jsdom/register",
    "mocha": "npm run mochaFor -- 'build/es/**/__tests__/*.mjs'",
    "test:report": "npm run build && npm run mochaFor -- --reporter mocha-junit-reporter --reporter-options mochaFile=./test_output/mocha.xml 'build/es/**/__tests__/*.mjs'",
    "test": "npm run build && npm run mocha",
    "prepublishOnly": "npm run format && npm run test"
  },
  "types": "./types/index.d.ts",
  "files": [
    "types",
    "build",
    "package.json",
    "README.md"
  ]
}
